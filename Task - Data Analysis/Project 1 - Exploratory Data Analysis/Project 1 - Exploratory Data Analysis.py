# -*- coding: utf-8 -*-
"""Task 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OgfIWWnPyA57waXyYSmI5qw5nrwLX4op

# Step - 1 - Introduction

The dataset was released by Aspiring Minds from the Aspiring Mind Employment Outcome 2015 (AMEO). The study is primarily limited  only to students with engineering disciplines. The dataset contains the employment outcomes of engineering graduates as dependent variables (Salary, Job Titles, and Job Locations) along with the standardized scores from three different areas – cognitive skills, technical skills and personality skills. The dataset also contains demographic features. The dataset  contains  around  40 independent variables and 4000 data points. The independent variables are both continuous and categorical in nature. The dataset contains a unique identifier for each candidate. Below mentioned table contains the details for the original dataset.

Importing all the necessaries library
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

"""## **Step - 2 - Import the data and display the head, shape and description of the data.**

Importing the aspiring minds dataset<br>
"""

data=pd.read_excel("/content/aspiring_minds_employability_outcomes_2015.xlsx")

"""
Displaying the top rows of dataset

"""

data.head()

"""Displaying the last ten rows of dataset"""

data.tail(10)

"""
Checking the information and data types of different variables

"""

data.info()

"""Viewing the Descripitive Statistics"""

data.describe()

"""# Step - 3 - Univariate Analysis -&gt; PDF, Histograms, Boxplots, Countplots, etc..

Univariate Analysis -<br>
Probability Distribution functions on collegeGPA<br>
"""

from scipy.stats import norm
pdf=norm.rvs(data["collegeGPA"])
pdf

ax = sns.distplot(pdf,
                  bins=80,
                  kde=True,
                  color='Green',
                  hist_kws={"linewidth":10,'alpha':1})
ax.set(xlabel='Normal Distribution', ylabel='Frequency')

"""We calculated the normal distribution of college GPA of students and we can observe that that most of the data point is between 60 to 80 marks with some extended to 50 in lower and 90 on higher side<br>

Histrogram of continous columns
"""

sns.histplot(data["Salary"],bins=100)

sns.histplot(data["10percentage"])

sns.histplot(data["English"])

sns.histplot(data["Logical"],kde=True)

"""The varipus histogram showing the frequency distributions of different variables and we can see mostly variable are normal distributed

Box plot
"""

sns.boxplot(y=data["Quant"],x=data["Gender"])

"""From the boxplot we can can obseve that males performs better than females in quant exam as median of female is 500 marks and male is nealy 550 """

sns.boxplot(y=data["English"],x=data["CollegeTier"])

"""From the above box plot we can see that students coming from tier two colloge are wearker in english compared to students coming from tier 1 city

Countplot
"""

sns.countplot(data["CollegeCityTier"],hue=data["Gender"])

"""We can see number of males are more than females irrestive of there college city"""

sns.countplot(data["Degree"])

"""we can see most of students choose btect in the graduation degree and few of them take mca while msc and m.tect number are negiable comparing to B.E"""

sns.countplot(data["CollegeState"])

"""**Finding missing, unique,count and outliers in data set**

Missing value in dataset
"""

data.isnull().count()

"""There is no missing value in the dataset"""

data.nunique()

"""from this we can observe that data is collected from 26 different state college and its classfied into two tier categories. Students have 46 types of sepecilization in four difeernt degree course"""

Continuousvariables=data.drop(["ID","DOJ","DOL","Designation","JobCity","Gender","DOB","12graduation","12board","CollegeID","CollegeTier","Degree","Specialization","CollegeCityID","CollegeCityTier","CollegeState","GraduationYear","Unnamed: 0","10board"],axis=1)

Continuousvariables

"""To view the outliers for continous columns"""

for column in Continuousvariables:
  plt.figure()
  Continuousvariables.boxplot([column])

"""There were lot of outliers were there in each varaible

# Step - 4 - Bivariate Analysis

**Bivariate Analysis**

Scatter plots
"""

sns.scatterplot(y="Salary",x="English",hue="Gender",data=data)

"""we can see there is no proper relationship between salary and english marks """

newsalarydata=data.loc[data["Salary"]<250000, 
      ['Logical', 'Gender', 'English',"Salary","10percentage","ComputerProgramming","CollegeTier"]]

"""we try to filter the salary below 2.5 lakhs to get better picture"""

sns.scatterplot(y="Salary",x="English",hue="Gender",data=newsalarydata)

"""After doing filteration result are bit shocking as again there is no trend or postive relationship between them but we can see people having marks between 300 to 800 is getting the same packages"""

sns.scatterplot(y="Salary",x="10percentage",hue="Gender",data=newsalarydata)

sns.scatterplot(y="Salary",x="10percentage",hue="Gender",data=data)

sns.scatterplot(y="Salary",x="12percentage",hue="Gender",data=data)

sns.scatterplot(y="Salary",x="ComputerProgramming",hue="CollegeTier",data=newsalarydata)

"""Hexbin plots"""

sns.jointplot(x="agreeableness",y="conscientiousness",kind="hex",data=data)

"""Swarmplot"""

sns.swarmplot(x="12percentage",y="Gender",data=data)

"""Barplot"""

sns.barplot(x="CollegeTier",y="ComputerProgramming",hue="Gender",data=data)

"""Lineplot"""

sns.lineplot(x="12graduation",y="Salary",data=data,hue="Gender")

Categorical_colums = ['Gender','Degree','CollegeTier','CollegeCityTier','12graduation','GraduationYear']
sns.set_style('whitegrid')
fig , axes = plt.subplots(nrows = 3 , ncols = 2 , figsize = (18,20))
fig.subplots_adjust(top = 1.2)
count = 0

for i in range(3):
    for j in range(2):
        sns.boxplot(data = data , y = 'Salary' , x = Categorical_colums[count] , ax = axes[i,j])
        axes[i,j].set_title(f"Salary vs {Categorical_colums[count]}", fontsize=16)
        count += 1

Categorical_colums = ['Gender','Degree','CollegeTier','CollegeCityTier','12graduation','GraduationYear',]
sns.set_style('whitegrid')
fig , axes = plt.subplots(nrows = 3 , ncols = 2 , figsize = (18,20))
fig.subplots_adjust(top = 1.2)
count = 0

for i in range(4):
    for j in range(2):
        sns.barplot(data = data , y = 'ComputerProgramming' , x = Categorical_colums[count] , ax = axes[i,j])
        axes[i,j].set_title(f"ComputerProgramming vs {Categorical_colums[count]}", fontsize=16)
        count += 1

"""# **Step - 5 - Research Questions**

Times of India article dated Jan 18, 2019 states that “After doing your Computer Science
Engineering if you take up jobs as a Programming Analyst, Software Engineer,
Hardware Engineer and Associate Engineer you can earn up to 2.5-3 lakhs as a fresh
graduate.” Test this claim with the data given to you.Is there a relationship between gender and specialisation? (i.e. Does the preference of
Specialisation depend on the Gender?)
"""

data["Designation"].nunique

data.groupby(["Designation"]).size()

"""T- test for checking whether software engineer is getting 2.5 to 3 lakhs packages"""

softwareengineer=data[(data["Designation"]=="software engineer")]

import scipy.stats as stats
t_statistic, p_value = stats.ttest_1samp(a=softwareengineer["Salary"], popmean=275000)
print(t_statistic , p_value)

"""Null hypothesis-software enginer gets a package of 2.5 to 3 lakhs<br>
Alternative hypothesis-software enginer did not gets a package of 2.5 to 3 lakhs<br>
As the p_value for the given problem is more than 0.05 which is the alpha value, we accept the null hypothesis and the alternative hypothesis is rejected

T- test for checking whether hardware engineer is getting 2.5 to 3 lakhs packages
"""

HardwareEngineer=data[(data["Designation"]=="hardware engineer")]

import scipy.stats as stats
t_statistic, p_value = stats.ttest_1samp(a=HardwareEngineer["Salary"], popmean=275000)
print(t_statistic , p_value)

"""Null hypothesis-Hardware enginer gets a package of 2.5 to 3 lakhs<br>
Alternative hypothesis-hardware enginer did not gets a package of 2.5 to 3 lakhs<br>
As the p_value for the given problem is more than 0.05 which is the alpha value, we accept the null hypothesis and the alternative hypothesis is rejected

T- test for checking whether associate engineer is getting 2.5 to 3 lakhs packages
"""

AssociateEngineer=data[(data["Designation"]=="associate engineer")]

import scipy.stats as stats
t_statistic, p_value = stats.ttest_1samp(a=AssociateEngineer["Salary"], popmean=275000)
print(t_statistic , p_value)

"""Null hypothesis-Associate enginer gets a package of 2.5 to 3 lakhs<br>
Alternative hypothesis-Associate enginer did not gets a package of 2.5 to 3 lakhs<br>
As the p_value for the given problem is more than 0.05 which is the alpha value, we accept the null hypothesis and the alternative hypothesis is rejected

T- test for checking whether programming analyst is getting 2.5 to 3 lakhs packages
"""

ProgrammingAnalyst=data[(data["Designation"]=="programmer analyst")]

import scipy.stats as stats
t_statistic, p_value = stats.ttest_1samp(a=ProgrammingAnalyst["Salary"], popmean=275000)
print(t_statistic , p_value)

"""Null hypothesis-Associate enginer gets a package of 2.5 to 3 lakhs<br>
Alternative hypothesis-Programming Analyst did not gets a package of 2.5 to 3 lakhs<br>
As the p_value for the given problem is more than 0.05 which is the alpha value, we accept the null hypothesis and the alternative hypothesis is rejected
"""

from scipy.stats import chi2_contingency
from scipy.stats import chi2

"""Chi-Square Test"""

data['Specialization'].value_counts()

data['Gender'].value_counts()

data['Specialization'].value_counts().plot(kind='bar', figsize=(15,5))

"""From the bar chart we can see majority of students opted for elctronics communication and computer science engineering. After that other computer course are choosen by students"""

Result=pd.crosstab(data.Specialization, data.Gender, margins=True)

"""Hypothesis Testing <br>
Null Hypothesis-There is no relationship between gender and specilizations opted by the students <br>
Alternative Hypothesis-There is  relationship between gender and specilizations opted by the students
"""

stat, p, dof, expected = chi2_contingency(Result)
alpha = 0.05
print("p value of chia square test is " + str(p))
if p >= alpha:
    print('Null hypothesis is rejected')
else:
    print('Null hypothesis is Accepeted')

"""P value is greater than 0.05 so we will reject the null hypothesis and conclude that there is a relationships between gender and specilaizations

**Step - 6 - Conclusion**

After doing your Computer Science Engineering if you take up jobs as a Programming Analyst, Software Engineer,Hardware Engineer and Associate Engineer you can earn up to 2.5-3 lakhs as a fresh graduate.<br>
This clain is proved with this data if students do comouter science and works for profile avove mentioned if will get a package of 2.5 to 3 lakhs as a fresh and also we inference that gender and specilizations had a relationship between them

**Step - 7 - Perform feature transformation**
"""

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
data1 = scaler.fit_transform(Continuousvariables.values)

data1

datascaled=pd.DataFrame(data1)

datascaled

datascaled.describe()

"""Yes, a candidate with a Computer Science Engineering degree can earn up to 2.5-3 lakhs as a fresh graduate, while the whole salary range for CS students is between 0 and over 7,00,000. There are also a lot of outliers for CS student salaries."""

